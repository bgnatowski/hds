services:
    proxy-app:
        container_name: proxy-app
        build:
            context: ./
            dockerfile: backend-dev.Dockerfile
        ports:
            - 8181:8181
        depends_on:
            - proxy-db
        environment:
            SPRING_PROFILES_ACTIVE: &spring_profiles_active docker
            DB_HOST: db
            DB_PORT: '5432'
            DB_NAME: &db_name proxies
            DB_USERNAME: &db_username postgres_proxy
            DB_PASSWORD: &db_password postgres_proxy_pass
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
    proxy-db:
        container_name: proxy-db
        image: postgres:15-alpine
        environment:
            POSTGRES_USER: *db_username
            POSTGRES_PASSWORD: *db_password
            POSTGRES_DB: *db_name
        ports:
            - 5432:5432
        volumes:
            - proxy_db_data:/var/lib/postgresql/data
        healthcheck:
            test: [CMD-SHELL, 'pg_isready -U ${POSTGRES_USER-postgres} -d ${POSTGRES_NAME-postgres}']
            interval: 10s
            timeout: 5s
            retries: 5
volumes:
    proxy_db_data: